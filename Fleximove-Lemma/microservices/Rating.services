import technology  from "../technology/JavaSpring.technology" as Spring
import technology from "../technology/Protocols.technology" as Protocols
import datatypes from "../domain/rating-context.data" as RatingDomain

@technology(Spring)
@technology(Protocols)
@sync(Protocols::_protocols.rest)
@Spring::_aspects.Application(name="RatingService")
public functional microservice com.fleximove.RatingService {

    @endpoints(Protocols::_protocols.rest: "/ratings";)
    interface RatingInterface {
        @endpoints(Protocols::_protocols.rest: "/vehicle";)
        @Spring::_aspects.PostMapping
        rateVehicle(
            @Spring::_aspects.RequestBody
            sync in rating : RatingDomain::RatingContext.RatingVehicle,
            @Spring::_aspects.ResponseEntity
            sync out vehicleRating : RatingDomain::RatingContext.RatingVehicle
        );

        @endpoints(Protocols::_protocols.rest: "/provider";)
        @Spring::_aspects.PostMapping
        rateProvider(
            @Spring::_aspects.RequestBody
            sync in rating : RatingDomain::RatingContext.RatingProvider,
            @Spring::_aspects.ResponseEntity
            sync out providerRating : RatingDomain::RatingContext.RatingProvider
        );

        @endpoints(Protocols::_protocols.rest: "/vehicle/{vehicleId}/average";)
        @Spring::_aspects.GetMapping
        getAverageVehicleRating(
            @Spring::_aspects.PathVariable 
            sync in vehicleId : long, 
            @Spring::_aspects.ResponseEntity
            sync out averageVehicleRating : double
        );

        @endpoints(Protocols::_protocols.rest: "/provider/{providerId}/average";)
        @Spring::_aspects.GetMapping
        getAverageProviderRating(
            @Spring::_aspects.PathVariable 
            sync in providerId : long, 
            @Spring::_aspects.ResponseEntity
            sync out averageProviderRating : double
        );

        @endpoints(Protocols::_protocols.rest: "/customerRatings/{customerId}/deleteAll";)
        @Spring::_aspects.DeleteMapping
        deleteCustomerRatingsByUserId(
            @Spring::_aspects.PathVariable 
            sync in customerId : long
        );

        @endpoints(Protocols::_protocols.rest: "/deleteAll/forRatedProvider/{providerId}";)
        @Spring::_aspects.DeleteMapping
        deleteProviderRatingsByProviderId(
            @Spring::_aspects.PathVariable 
            sync in providerId : long
        );

        @endpoints(Protocols::_protocols.rest: "/deleteAll/forRatedVehicle/{vehicleId}";)
        @Spring::_aspects.DeleteMapping
        deleteVehicleRatingsByVehicleId(
            @Spring::_aspects.PathVariable 
            sync in vehicleId : long
        );
    }
}
