import technology  from "../technology/JavaSpring.technology" as Spring
import technology from "../technology/Protocols.technology" as Protocols
import datatypes from "../domain/payment-context.data" as PaymentDomain


@technology(Spring)
@technology(Protocols)
@sync(Protocols::_protocols.rest)
@Spring::_aspects.Application(name="PaymentService")
functional microservice com.payment.PaymentService {

    @sync(Spring::_protocols.rest)
    @endpoints(Spring::_protocols.rest: "/api/payments")
    interface PaymentInterface {

        @endpoints(Protocols::_protocols.rest: "/{paymentId}";)
        @Spring::_aspects.GetMapping
        get(
            @Spring::_aspects.PathVariable 
            sync in paymentId : string, //UUID
            sync out payment : PaymentDomain::PaymentContext.Payment
        );

        @endpoints(Protocols::_protocols.rest: "";)
        @Spring::_aspects.PostMapping
        create(
            @Spring::_aspects.RequestBody
            sync in payment : PaymentDomain::PaymentContext.Payment,
            @Spring::_aspects.ResponseEntity
            sync out payment : PaymentDomain::PaymentContext.Payment
        );

        @endpoints(Protocols::_protocols.rest: "/process";)
        @Spring::_aspects.PostMapping
        processFromBooking(
            @Spring::_aspects.RequestBody
            sync in request : PaymentDomain::PaymentContext.PaymentRequestDTO,
            sync out response : PaymentDomain::PaymentContext.PaymentResponseDTO
        );

        @endpoints(Protocols::_protocols.rest: "/status/{paymentId}";)
        @Spring::_aspects.GetMapping
        getStatus(
            @Spring::_aspects.PathVariable 
            sync in paymentId : string, //UUID
            @Spring::_aspects.ResponseEntity
            sync out response : PaymentDomain::PaymentContext.PaymentResponseDTO
        );

        @endpoints(Protocols::_protocols.rest: "/deleteByUser/{userId}";)
        @Spring::_aspects.DeleteMapping
        deletePaymentsByUserId(
            @Spring::_aspects.PathVariable 
            sync in userId : long, 
            @Spring::_aspects.ResponseEntity
            sync out successCode : int, 
            @Spring::_aspects.ResponseEntity
            sync out fault errorCode : int
        );

        @endpoints(Protocols::_protocols.rest: "/deleteAll/forBooking/{bookingId}";)
        @Spring::_aspects.DeleteMapping
        deletePaymentsByBookingId(
            @Spring::_aspects.PathVariable 
            sync in bookingId : string, //UUID
            @Spring::_aspects.ResponseEntity
            sync out successCode : int, 
            @Spring::_aspects.ResponseEntity
            sync out fault errorCode : int
        );
    }
}
